name: release
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-prod:
    environment:
      name: production
      url: https://ccl.newtri-science.michel.lu
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Store release_created in file
        run: echo ${{ steps.release.outputs.release_created }} > release_created.txt 
      - name: Upload release_created to artifactory
        uses: actions/upload-artifact@v4
        with:
          name: release_created
          path: release_created.txt
      - name: Checkout repository
        # these if statements ensure that a publication only occurs when a new release is created
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
      - name: Print Version
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "New Version: v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
      - name: Build and push docker image
        if: ${{ steps.release.outputs.release_created }}
        uses: ./.github/actions/build-push-docker-image
        with:
          tag: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker_user: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
          isLatest: 'true'
      - name: Deploy production app
        if: ${{ steps.release.outputs.release_created }}
        uses: ./.github/actions/deploy-app
        with:
          name: prod
          tag: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          version: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          token: ${{ secrets.GH_PAT }}
          tlsName: cycling-coach-lab-tls
          subDomain: ccl
          persistence: true
      - name: Wait for review app deployment
        if: ${{ steps.release.outputs.release_created }}
        run: |
          .ci/wait_for_version_change.sh ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} "https://ccl.newtri-science.michel.lu"

  deploy-release:
    name: Deploy release app
    needs: [release-prod]
    environment:
      name: development
      url: https://rls.newtri-science.michel.lu
    runs-on: ubuntu-latest
    steps:
      - name: Download workflow artifact
        uses: actions/download-artifact@v4
        with:
          name: release_created
      - name: Read artifacts
        id: release_env
        run: |
          release_created=$(cat release_created.txt)
          echo "release_created=$release_created"
          echo "release_created=$release_created" >> $GITHUB_OUTPUT
          version=pre-$(date +%s)
          echo $version > version.txt
          echo "version=$version" >> $GITHUB_ENV
      - name: Upload pre-version to artifactory
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt
      - name: Checkout repository
        uses: actions/checkout@v4
        if: ${{ steps.release_env.outputs.release_created == '' }}
      - name: Generate environment
        if: ${{ steps.release_env.outputs.release_created == '' }}
        run: |
          version=pre-$(jq -r '.["."]' .release-please-manifest.json)
          echo "Extracted version: $version"
      - name: Build and push docker image
        if: ${{ steps.release_env.outputs.release_created == '' }}
        uses: ./.github/actions/build-push-docker-image
        with:
          tag: ${{ env.version }}
          docker_user: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Deploy review app
        if: ${{ steps.release_env.outputs.release_created == '' }}
        uses: ./.github/actions/deploy-app
        with:
          tag: ${{ steps.release_env.outputs.version }}
          subDomain: rls 
          name: rls
          version: ${{ env.version }}
          token: ${{ secrets.GH_PAT }}
          tlsName: ccl-rls-${{ steps.generate_environment.outputs.tag }}-tls
          persistence: false
      - name: Wait for release deployment
        if: ${{ steps.release_env.outputs.release_created == '' }}
        run: |
          .ci/wait_for_version_change.sh ${{ env.version }} https://rls.newtri-science.michel.lu

  cypress-run:
    name: Run integration tests against release app
    needs: [deploy-release]
    runs-on: ubuntu-latest
    steps:
      - name: Download workflow artifact
        uses: actions/download-artifact@v4
        with:
          name: release_created
      - name: Read artifacts
        id: release_env
        run: |
          release_created=$(cat release_created.txt)
          echo "release_created=$release_created"
          echo "release_created=$release_created" >> $GITHUB_OUTPUT
      - name: Download version
        if: ${{ steps.release_env.outputs.release_created == '' }}
        uses: actions/download-artifact@v4
        with:
          name: version
      - name: Read version from the artifacts
        if: ${{ steps.release_env.outputs.release_created == '' }}
        run: |
          version=$(cat version.txt)
          echo "version=$version"
          echo "version=$version" >> $GITHUB_ENV
      - name: Checkout repository
        if: ${{ steps.release_env.outputs.release_created == '' }}
        uses: actions/checkout@v4
      - name: Install Cypress dependencies
        if: ${{ steps.release_env.outputs.release_created == '' }}
        run: npm install cypress
      - name: Cypress run
        if: ${{ steps.release_env.outputs.release_created == '' }}
        uses: cypress-io/github-action@v6.6.1
        with:
          cache-key: cypress-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        env:
          CYPRESS_BASE_URL: https://rls.newtri-science.michel.lu
          CYPRESS_APP_VERSION: ${{ env.version }}
      - uses: actions/upload-artifact@v4
        if: ${{ steps.release_env.outputs.release_created == '' }} && failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        if: ${{ steps.release_env.outputs.release_created == '' }} && failure()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore
