name: pull request
on:
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Go Binary
        uses: ./.github/actions/setup-build-go-binary
        with:
          go-version: "1.22.0"
      - name: Run Tests
        uses: robherley/go-test-action@v0.1.0
        with:
          omitUntestedPackages: true

  deploy-review:
    name: Deploy review app
    needs: [build-test]
    environment: 
      name: development
      url: ${{ steps.generate_environment.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate environment
        id: generate_environment
        uses: ./.github/actions/setup-environment
        with:
          base_url: 'newtri-science.michel.lu'
      - name: Save tag name
        run: echo ${{ steps.generate_environment.outputs.tag }} > open-review-app.txt 
      - name: Upload tag name artifact
        uses: actions/upload-artifact@v4
        with:
          name: open-review-app
          path: open-review-app.txt
      - name: Build and push docker image
        uses: ./.github/actions/build-push-docker-image
        with:
          tag: ${{ steps.generate_environment.outputs.tag }}
          docker_user: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
          isLatest: false
      - name: Deploy review app
        uses: ./.github/actions/deploy-app
        with:
          tag: ${{ steps.generate_environment.outputs.tag }}
          subDomain: ${{ steps.generate_environment.outputs.tag }}
          name: ${{ steps.generate_environment.outputs.tag }}
          version: ${{ steps.generate_environment.outputs.commit_hash }}
          token: ${{ secrets.GH_PAT }}
          tlsName: ccl-review-${{ steps.generate_environment.outputs.tag }}-tls
          persistence: false
      - name: Wait for review app deployment
        if: always()
        run: |
          .ci/wait_for_version_change.sh ${{ steps.generate_environment.outputs.commit_hash }} "https://${{ steps.generate_environment.outputs.tag }}.newtri-science.michel.lu"
          echo "tag=${{ steps.generate_environment.outputs.tag }}" >> $GITHUB_OUTPUT

  stop-review-app:
    name: Stop review app & docker tag
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' || github.event_name == 'pull_request_target' && github.event.action == 'synchronize' }}
    environment: development
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Download review app artifact
        uses: actions/download-artifact@v4
        with:
          name: open-review-app 
      - name: Read tag of review app to close
        id: review-app-to-close
        run: |
          tag=$(cat open-review-app.txt)
          echo "tag=$tag"
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Checkout k8s config repository
        uses: actions/checkout@v4
        with:
          repository: 'michelm117/cycling-coach-lab-k8s'
          token: ${{ secrets.GH_PAT }}
          ref: main
      - name: Remove review app
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git rm apps/${{ steps.review-app-to-close.outputs.tag }}.yaml
          git commit -m "ci: remove review app ${{ steps.review-app-to-close.outputs.tag }}"
          git push
      # - name: "Todo: delete docker tag on docker hub"

