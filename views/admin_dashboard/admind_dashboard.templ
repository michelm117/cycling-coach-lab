package admin_dashboard

import (
	"github.com/michelm117/cycling-coach-lab/model"
	"github.com/michelm117/cycling-coach-lab/views/layout"
	"github.com/michelm117/cycling-coach-lab/views/components"
	"fmt"
)

templ UserTable(users []*model.User) {
	<div class="h-full overflow-auto">
		<table class="table table-auto">
			<thead>
				<tr>
					<th>Benutzer</th>
					<th>Status</th>
					<th>Registriert seit</th>
					<th>Aktionen</th>
				</tr>
			</thead>
			<tbody id="user-table" data-cy="user-table">
				for _, user:= range users {
					@UserRow(user)
				}
			</tbody>
		</table>
	</div>
}

templ UserRow(user *model.User) {
	<tr id={ fmt.Sprintf("user_row_%v", user.ID) } data-cy="user-row">
		<td>
			<div class="flex items-center gap-3">
				@components.Avatar(user.Firstname, user.Lastname)
				<div>
					<div class="font-bold" id="user-firstname">
						{ user.Firstname } { user.Lastname }
					</div>
					<div class="text-sm opacity-50" data-cy="user-email" id="user-email">
						{ user.Email }
					</div>
				</div>
			</div>
		</td>
		<td>
			<span
				class={ "indicator-item indicator-middle indicator-center badge" , templ.KV("badge-info",
      user.Status=="active" ), templ.KV("badge-warning", user.Status=="inactive" ) }
			>
				{ user.Status }
			</span>
		</td>
		<td>2023/12/12</td>
		<td class="dropdown dropdown-left overflow-visible">
			<div data-cy="open-actions" tabindex="0" role="button" class="btn m-1 btn-xs btn-ghost" d>
				<i class="fa-solid fa-ellipsis-vertical"></i>
			</div>
			<ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-300 rounded-box w-52">
				<li
					hx-delete={ fmt.Sprintf("/users/%v", user.ID) }
					hx-trigger="deleteUser"
					hx-target="closest tr"
					hx-swap="outerHTML"
					onClick="Swal.fire(
          {
            title: 'Bist du sicher, dass du den Benutzer löschen möchtest?', 
            text:'Diese Aktion kann nicht rückgängig gemacht werden!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Ja, löschen!',
            cancelButtonText: 'Abbrechen'
          }).then(({ isConfirmed }) => {
            if(isConfirmed) {
              htmx.trigger(this, 'deleteUser');
            } 
        })"
				>
					<a>Löschen</a>
				</li>
				<li><a>Item 2</a></li>
			</ul>
		</td>
	</tr>
}

templ AddUserDialog() {
	<div
		id="add-user-wrapper"
		x-data="{ OpenAddUserDialog: false }"
		x-trap="OpenAddUserDialog"
		@keyup.esc="OpenAddUserDialog = false"
	>
		<div
			id="add_user_overlay"
			class="absolute left-[calc(-50vw+50%)] top-0 h-screen w-screen bg-gray-900 bg-opacity-50 z-40"
			x-show="OpenAddUserDialog"
			x-cloak
			@click="OpenAddUserDialog = !OpenAddUserDialog"
		></div>
		<div
			class="absolute bottom-0 left-[calc(-50vw+50%)] md:left-auto md:right-0 w-screen md:w-fit h-fit md:h-full bg-base-100 rounded-lg shadow-lg z-50"
			x-show="OpenAddUserDialog"
			x-cloak
			x-transition.duration.300ms
		>
			<div class="flex flex-col justify-between items-center p-4">
				<h3 class="font-bold text-lg">Benutzer hinzufügen</h3>
				<div class="flex flex-col justify-center mt-6"></div>
				@AddUserForm()
			</div>
		</div>
		<button class="btn btn-circle absolute right-20 bottom-20" @click="OpenAddUserDialog = !OpenAddUserDialog">
			<i class="fa-solid fa-plus"></i>
		</button>
	</div>
}

templ AddUserForm() {
	<form hx-post="/users" class="w-full space-y-4">
		<div class="grid sm:grid-cols-2 gap-4">
			<div class="flex flex-col">
				<label for="firstname" class="text-sm">Vorname:</label>
				<input data-cy="firstname" type="text" id="firstname" name="firstname" class="input input-bordered"/>
			</div>
			<div class="flex flex-col">
				<label for="lastname" class="text-sm">Nachname:</label>
				<input type="text" id="lastname" data-cy="lastname" name="lastname" class="input input-bordered"/>
			</div>
		</div>
		<div class="flex flex-col">
			<label for="lastname" class="text-sm">Geburtsdatum:</label>
			<input type="date" id="dateOfBirth" data-cy="dateOfBirth" name="dateOfBirth"/>
		</div>
		<div class="flex flex-col">
			<label for="email" class="text-sm">Email:</label>
			<input type="email" id="email" data-cy="email" name="email" class="input input-bordered"/>
		</div>
		<div class="flex flex-col">
			<label for="password" class="text-sm">Passwort:</label>
			<input type="password" id="password" data-cy="password" name="password" class="input input-bordered"/>
		</div>
		<div class="flex flex-col">
			<label for="role" class="text-sm">Benutzerrole:</label>
			<select type="role" id="role" data-cy="role" name="role" class="select select-bordered">
				<option selected value="athlete">Athlet</option>
				<option value="admin">Administrator</option>
			</select>
		</div>
		<button data-cy="add-user-submit" type="submit" class="btn btn-primary w-full mt-6">Erstellen</button>
	</form>
}

templ AddUserResponse(user *model.User) {
	<tbody id="user-table" data-cy="user-table" hx-swap-oob="beforeend:#user-table">
		@UserRow(user)
	</tbody>
	@AddUserForm()
}

templ Index(users []*model.User) {
	@layout.BaseLayout() {
		<div x-data="{userIdToDelete: null}">
			@UserTable(users)
			@AddUserDialog()
		</div>
	}
}
